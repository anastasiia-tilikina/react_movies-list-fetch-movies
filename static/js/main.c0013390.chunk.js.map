{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","API_URL","CustomMovie","movieData","this","Title","Plot","Poster","imdbID","FindMovie","query","setQuery","addMovie","newMovie","setNewMovie","useState","responseError","setResponseError","initSearch","setInitSearch","useEffect","onSubmit","e","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","response","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","App","setMovies","list","some","hasSuchMovie","curr","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0013390.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_KEY = 'e5ac1413';\n\nconst API_URL = `https://www.omdbapi.com/?apikey=${API_KEY}`;\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  query: string;\n  setQuery: (value: string) => void;\n  addMovie: () => void;\n  newMovie: Movie | null;\n  setNewMovie: (value: Movie | null) => void;\n};\n\nclass CustomMovie implements Movie {\n  title: string;\n\n  description: string;\n\n  imgUrl: string;\n\n  imdbUrl: string;\n\n  imdbId: string;\n\n  constructor(movieData: MovieData) {\n    this.title = movieData.Title;\n    this.description = movieData.Plot;\n    this.imgUrl = movieData.Poster === 'N/A'\n      ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n      : movieData.Poster;\n    this.imdbUrl = `https://www.imdb.com/title/${movieData.imdbID}`;\n    this.imdbId = movieData.imdbID;\n  }\n}\n\nexport const FindMovie: React.FC<Props> = ({\n  query,\n  setQuery,\n  addMovie,\n  newMovie,\n  setNewMovie,\n}) => {\n  const [responseError, setResponseError] = useState(false);\n  const [initSearch, setInitSearch] = useState(false);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setInitSearch(true);\n\n    getMovie(query)\n      .then(response => {\n        if ('Error' in response) {\n          setResponseError(true);\n        } else {\n          setNewMovie(new CustomMovie(response));\n        }\n      });\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setResponseError(false);\n    setQuery(e.target.value);\n  };\n\n  useEffect(() => {\n    setInitSearch(false);\n  }, [newMovie, query]);\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {responseError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': initSearch && !responseError },\n              )}\n              disabled={!query}\n            >\n              {!newMovie ? 'Find a movie' : 'Search Again'}\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {newMovie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovie}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {newMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={newMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [query, setQuery] = useState('');\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n\n  const hasSuchMovie = ({ title }: Movie, list: Movie[]) => {\n    return list.some(movie => movie.title === title);\n  };\n\n  const AddMovie = () => {\n    if (newMovie && !hasSuchMovie(newMovie, movies)) {\n      setMovies((curr) => [...curr, newMovie]);\n    }\n\n    setNewMovie(null);\n    setQuery('');\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          query={query}\n          setQuery={setQuery}\n          addMovie={AddMovie}\n          newMovie={newMovie}\n          setNewMovie={setNewMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}